from flask import Flask, jsonify, current_app
import numpy as np
import cv2
import matplotlib.pyplot as plt
import time
import requests
import pyautogui
import os

app = Flask(__name__)
with app.app_context():


    @app.route("/")
    def openCamera(link):
        link = 'http://ezvizportal-1414028875.us-east-1.elb.amazonaws.com/help/service/pc/login.html'
        #linkCamera = ''

        req = requests.get(link)
        #reqCam = requests.get(linkCamera)
        imagemTreino = pyautogui.screenshot()


    @app.route("/detect")
    def detectFaces(arquivoTreino, imagemTreino,  scaleFactor=1.1):
        cv2_base_dir = os.path.dirname(os.path.abspath(cv2.__file__))
        haar_model = os.path.join(cv2_base_dir, 'data/haarcascade_frontalface_default.xml')

        arq = cv2.CascadeClassifier(haar_model)
        img_copy = cv2.imread(imagemTreino)
        cv2.imshow('Original',img_copy)
        gray = cv2.cvtColor(img_copy, cv2.COLOR_BGR2GRAY)    #every image has to be gray for openCv

        plt.imshow(gray, cmap='gray')   #show the image

        faces = arq.detectMultiScale(gray, scaleFactor = 1.1, minNeighbors = 5)
        print('Faces found: ', len(faces))

        for (x, y, w, h) in faces:
            cv2.rectangle(img_copy, (x,y),(x + w, y + h), (0, 255, 0), 2)
            if len(faces) < 30:      #if there should be 30 students
                presNum = int(len(faces))
                presPct = presNum *100/30
                faltNum = int(presNum - 30)
                faltPct = faltNum *100/30
                output = {'Present students' : presNum, 'Present students %' : presPct, 'Absent students' : faltNum, 'Absent students %' : faltPct }

                print(output)
                return jsonify(output)
            else:
                output = {'Present students' : 'all students present'}

                print(output)
                return jsonify(output)
                return img_copy

    #y = openCamera('http://ezvizportal-1414028875.us-east-1.elb.amazonaws.com/help/service/pc/login.html')
    #x = detectFaces('data/haarcascade_frontalface_alt.xml', r'C:\Users\User\Desktop\depositphotos_252551228-stock-photo-happy-faces-collage.jpg')

    if __name__ == "__main__":
        openCamera('http://ezvizportal-1414028875.us-east-1.elb.amazonaws.com/help/service/pc/login.html')
        detectFaces('data/haarcascade_frontalface_alt.xml', r'C:\Users\User\Desktop\depositphotos_252551228-stock-photo-happy-faces-collage.jpg')
        app.run(debug=True)
